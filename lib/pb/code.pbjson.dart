///
//  Generated code. Do not modify.
//  source: code.proto
//
// @dart = 2.12
// ignore_for_file: annotate_overrides,camel_case_types,constant_identifier_names,deprecated_member_use_from_same_package,directives_ordering,library_prefixes,non_constant_identifier_names,prefer_final_fields,return_of_invalid_type,unnecessary_const,unnecessary_import,unnecessary_this,unused_import,unused_shown_name

import 'dart:core' as $core;
import 'dart:convert' as $convert;
import 'dart:typed_data' as $typed_data;
@$core.Deprecated('Use response_codeDescriptor instead')
const response_code$json = const {
  '1': 'response_code',
  '2': const [
    const {'1': 'normal', '2': 0},
    const {'1': 'fail', '2': 1},
    const {'1': 'account_err', '2': 101},
    const {'1': 'password_err', '2': 102},
    const {'1': 'token_err', '2': 103},
    const {'1': 'phone_num_used', '2': 104},
    const {'1': 'email_used', '2': 105},
    const {'1': 'nickname_illegal', '2': 106},
    const {'1': 'nickname_too_short', '2': 107},
    const {'1': 'nickname_too_long', '2': 108},
    const {'1': 'nickname_used', '2': 109},
    const {'1': 'password_already_set', '2': 110},
    const {'1': 'old_password_err', '2': 111},
    const {'1': 'already_bind_phone', '2': 112},
    const {'1': 'already_bind_email', '2': 113},
    const {'1': 'send_v_code_err', '2': 114},
    const {'1': 'v_code_expire', '2': 115},
    const {'1': 'v_code_fail', '2': 116},
    const {'1': 'account_not_bind', '2': 117},
    const {'1': 'phone_num_wrong', '2': 118},
    const {'1': 'email_wrong', '2': 119},
    const {'1': 'can_not_register', '2': 132},
    const {'1': 'oauth_type_err', '2': 120},
    const {'1': 'oauth_resp_err', '2': 121},
    const {'1': 'not_elite', '2': 122},
    const {'1': 'elite_expire', '2': 123},
    const {'1': 'content_too_long', '2': 124},
    const {'1': 'no_data', '2': 125},
    const {'1': 'time_out_of_sync', '2': 130},
    const {'1': 'account_merge', '2': 131},
    const {'1': 'is_friend', '2': 201},
    const {'1': 'is_black', '2': 202},
    const {'1': 'not_apply', '2': 203},
    const {'1': 'not_friend', '2': 204},
    const {'1': 'friend_limit', '2': 205},
    const {'1': 'black_limit', '2': 206},
    const {'1': 'apply_limit', '2': 207},
    const {'1': 'not_his_friend', '2': 208},
    const {'1': 'group_name_exist', '2': 211},
    const {'1': 'mark_num_limit', '2': 212},
    const {'1': 'group_num_limit', '2': 213},
    const {'1': 'in_room', '2': 221},
    const {'1': 'no_room', '2': 222},
    const {'1': 'room_lock', '2': 223},
    const {'1': 'room_full', '2': 224},
    const {'1': 'not_master', '2': 225},
    const {'1': 'invitee_offline', '2': 226},
    const {'1': 'not_all_ready', '2': 227},
    const {'1': 'not_member_enough', '2': 228},
    const {'1': 'in_comp', '2': 229},
    const {'1': 'in_match', '2': 230},
    const {'1': 'room_in_comp', '2': 231},
    const {'1': 'site_not_empty', '2': 232},
    const {'1': 'duration_limit', '2': 233},
    const {'1': 'no_right', '2': 234},
    const {'1': 'comp_not_open', '2': 235},
    const {'1': 'comp_end', '2': 236},
    const {'1': 'exist_referee', '2': 237},
    const {'1': 'not_in_match1v1', '2': 240},
    const {'1': 'match1v1_timeout', '2': 241},
    const {'1': 'not_in_match', '2': 242},
    const {'1': 'match_timeout', '2': 243},
    const {'1': 'match_cd', '2': 244},
    const {'1': 'forbid_sit_out', '2': 245},
    const {'1': 'not_in_comp', '2': 246},
    const {'1': 'period_err', '2': 247},
    const {'1': 'is_rewarded', '2': 248},
    const {'1': 'time_trial_no_num', '2': 250},
    const {'1': 'password_illegal', '2': 251},
    const {'1': 'repository_limit', '2': 260},
    const {'1': 'cd_key_active', '2': 300},
    const {'1': 'cd_key_invalid', '2': 301},
    const {'1': 'cd_key_used', '2': 302},
    const {'1': 'invitation_code_invalid', '2': 303},
    const {'1': 'invitation_code_used', '2': 304},
    const {'1': 'quest_un_commit', '2': 306},
    const {'1': 'quest_rewarded', '2': 307},
    const {'1': 'old_acc_rewarded', '2': 310},
    const {'1': 'not_old_acc', '2': 311},
    const {'1': 'chat_not_in_comp', '2': 320},
    const {'1': 'chat_not_in_room', '2': 321},
    const {'1': 'chat_mute', '2': 322},
    const {'1': 'score_not_enough', '2': 330},
    const {'1': 'bag_limit', '2': 331},
    const {'1': 'shop_limit', '2': 332},
    const {'1': 'cost_limit', '2': 333},
    const {'1': 'item_not_enough', '2': 334},
    const {'1': 'no_effect', '2': 335},
    const {'1': 'exchange_code_invalid', '2': 351},
    const {'1': 'exchange_code_used', '2': 352},
    const {'1': 'exchange_code_limit', '2': 353},
    const {'1': 'activity_not_reach', '2': 400},
    const {'1': 'activity_rewarded', '2': 401},
    const {'1': 'no_brake_through', '2': 500},
    const {'1': 'not_in_closing', '2': 600},
    const {'1': 'account_risk', '2': 601},
    const {'1': 'account_close', '2': 602},
    const {'1': 'account_closing', '2': 603},
    const {'1': 'major_time_error', '2': 610},
    const {'1': 'major_unauthorized', '2': 611},
    const {'1': 'major_edit_forbid', '2': 612},
    const {'1': 'major_info_required', '2': 613},
    const {'1': 'major_num_limit', '2': 614},
    const {'1': 'major_not_start', '2': 615},
    const {'1': 'major_round_error', '2': 616},
    const {'1': 'major_round_not_over', '2': 617},
    const {'1': 'major_repeat_appeal', '2': 618},
    const {'1': 'major_competitor_limit', '2': 620},
    const {'1': 'major_already_started', '2': 621},
    const {'1': 'team_name_edit_limit', '2': 630},
    const {'1': 'team_not_join', '2': 631},
    const {'1': 'team_already_join', '2': 632},
    const {'1': 'team_repeat_request', '2': 633},
    const {'1': 'team_target_no_exist', '2': 634},
    const {'1': 'team_target_op_limit', '2': 635},
    const {'1': 'team_logout_not_enough', '2': 636},
    const {'1': 'team_role_num_limit', '2': 637},
    const {'1': 'team_prepare_denied_join', '2': 638},
    const {'1': 'team_info_required', '2': 639},
    const {'1': 'team_cond_not_met', '2': 640},
    const {'1': 'team_auto_reject', '2': 641},
    const {'1': 'team_invite_repeat', '2': 642},
    const {'1': 'team_recruit_limit', '2': 643},
    const {'1': 'team_join_cd', '2': 644},
    const {'1': 'team_impeach_notice_limit', '2': 645},
    const {'1': 'team_reason_null', '2': 646},
    const {'1': 'db_err', '2': 900},
    const {'1': 'data_err', '2': 901},
    const {'1': 'net_err', '2': 902},
    const {'1': 'cd_err', '2': 903},
    const {'1': 'data_null', '2': 904},
    const {'1': 'permission_denied', '2': 905},
    const {'1': 'input_illegal', '2': 906},
  ],
};

/// Descriptor for `response_code`. Decode as a `google.protobuf.EnumDescriptorProto`.
final $typed_data.Uint8List response_codeDescriptor = $convert.base64Decode('Cg1yZXNwb25zZV9jb2RlEgoKBm5vcm1hbBAAEggKBGZhaWwQARIPCgthY2NvdW50X2VychBlEhAKDHBhc3N3b3JkX2VychBmEg0KCXRva2VuX2VychBnEhIKDnBob25lX251bV91c2VkEGgSDgoKZW1haWxfdXNlZBBpEhQKEG5pY2tuYW1lX2lsbGVnYWwQahIWChJuaWNrbmFtZV90b29fc2hvcnQQaxIVChFuaWNrbmFtZV90b29fbG9uZxBsEhEKDW5pY2tuYW1lX3VzZWQQbRIYChRwYXNzd29yZF9hbHJlYWR5X3NldBBuEhQKEG9sZF9wYXNzd29yZF9lcnIQbxIWChJhbHJlYWR5X2JpbmRfcGhvbmUQcBIWChJhbHJlYWR5X2JpbmRfZW1haWwQcRITCg9zZW5kX3ZfY29kZV9lcnIQchIRCg12X2NvZGVfZXhwaXJlEHMSDwoLdl9jb2RlX2ZhaWwQdBIUChBhY2NvdW50X25vdF9iaW5kEHUSEwoPcGhvbmVfbnVtX3dyb25nEHYSDwoLZW1haWxfd3JvbmcQdxIVChBjYW5fbm90X3JlZ2lzdGVyEIQBEhIKDm9hdXRoX3R5cGVfZXJyEHgSEgoOb2F1dGhfcmVzcF9lcnIQeRINCglub3RfZWxpdGUQehIQCgxlbGl0ZV9leHBpcmUQexIUChBjb250ZW50X3Rvb19sb25nEHwSCwoHbm9fZGF0YRB9EhUKEHRpbWVfb3V0X29mX3N5bmMQggESEgoNYWNjb3VudF9tZXJnZRCDARIOCglpc19mcmllbmQQyQESDQoIaXNfYmxhY2sQygESDgoJbm90X2FwcGx5EMsBEg8KCm5vdF9mcmllbmQQzAESEQoMZnJpZW5kX2xpbWl0EM0BEhAKC2JsYWNrX2xpbWl0EM4BEhAKC2FwcGx5X2xpbWl0EM8BEhMKDm5vdF9oaXNfZnJpZW5kENABEhUKEGdyb3VwX25hbWVfZXhpc3QQ0wESEwoObWFya19udW1fbGltaXQQ1AESFAoPZ3JvdXBfbnVtX2xpbWl0ENUBEgwKB2luX3Jvb20Q3QESDAoHbm9fcm9vbRDeARIOCglyb29tX2xvY2sQ3wESDgoJcm9vbV9mdWxsEOABEg8KCm5vdF9tYXN0ZXIQ4QESFAoPaW52aXRlZV9vZmZsaW5lEOIBEhIKDW5vdF9hbGxfcmVhZHkQ4wESFgoRbm90X21lbWJlcl9lbm91Z2gQ5AESDAoHaW5fY29tcBDlARINCghpbl9tYXRjaBDmARIRCgxyb29tX2luX2NvbXAQ5wESEwoOc2l0ZV9ub3RfZW1wdHkQ6AESEwoOZHVyYXRpb25fbGltaXQQ6QESDQoIbm9fcmlnaHQQ6gESEgoNY29tcF9ub3Rfb3BlbhDrARINCghjb21wX2VuZBDsARISCg1leGlzdF9yZWZlcmVlEO0BEhQKD25vdF9pbl9tYXRjaDF2MRDwARIVChBtYXRjaDF2MV90aW1lb3V0EPEBEhEKDG5vdF9pbl9tYXRjaBDyARISCg1tYXRjaF90aW1lb3V0EPMBEg0KCG1hdGNoX2NkEPQBEhMKDmZvcmJpZF9zaXRfb3V0EPUBEhAKC25vdF9pbl9jb21wEPYBEg8KCnBlcmlvZF9lcnIQ9wESEAoLaXNfcmV3YXJkZWQQ+AESFgoRdGltZV90cmlhbF9ub19udW0Q+gESFQoQcGFzc3dvcmRfaWxsZWdhbBD7ARIVChByZXBvc2l0b3J5X2xpbWl0EIQCEhIKDWNkX2tleV9hY3RpdmUQrAISEwoOY2Rfa2V5X2ludmFsaWQQrQISEAoLY2Rfa2V5X3VzZWQQrgISHAoXaW52aXRhdGlvbl9jb2RlX2ludmFsaWQQrwISGQoUaW52aXRhdGlvbl9jb2RlX3VzZWQQsAISFAoPcXVlc3RfdW5fY29tbWl0ELICEhMKDnF1ZXN0X3Jld2FyZGVkELMCEhUKEG9sZF9hY2NfcmV3YXJkZWQQtgISEAoLbm90X29sZF9hY2MQtwISFQoQY2hhdF9ub3RfaW5fY29tcBDAAhIVChBjaGF0X25vdF9pbl9yb29tEMECEg4KCWNoYXRfbXV0ZRDCAhIVChBzY29yZV9ub3RfZW5vdWdoEMoCEg4KCWJhZ19saW1pdBDLAhIPCgpzaG9wX2xpbWl0EMwCEg8KCmNvc3RfbGltaXQQzQISFAoPaXRlbV9ub3RfZW5vdWdoEM4CEg4KCW5vX2VmZmVjdBDPAhIaChVleGNoYW5nZV9jb2RlX2ludmFsaWQQ3wISFwoSZXhjaGFuZ2VfY29kZV91c2VkEOACEhgKE2V4Y2hhbmdlX2NvZGVfbGltaXQQ4QISFwoSYWN0aXZpdHlfbm90X3JlYWNoEJADEhYKEWFjdGl2aXR5X3Jld2FyZGVkEJEDEhUKEG5vX2JyYWtlX3Rocm91Z2gQ9AMSEwoObm90X2luX2Nsb3NpbmcQ2AQSEQoMYWNjb3VudF9yaXNrENkEEhIKDWFjY291bnRfY2xvc2UQ2gQSFAoPYWNjb3VudF9jbG9zaW5nENsEEhUKEG1ham9yX3RpbWVfZXJyb3IQ4gQSFwoSbWFqb3JfdW5hdXRob3JpemVkEOMEEhYKEW1ham9yX2VkaXRfZm9yYmlkEOQEEhgKE21ham9yX2luZm9fcmVxdWlyZWQQ5QQSFAoPbWFqb3JfbnVtX2xpbWl0EOYEEhQKD21ham9yX25vdF9zdGFydBDnBBIWChFtYWpvcl9yb3VuZF9lcnJvchDoBBIZChRtYWpvcl9yb3VuZF9ub3Rfb3ZlchDpBBIYChNtYWpvcl9yZXBlYXRfYXBwZWFsEOoEEhsKFm1ham9yX2NvbXBldGl0b3JfbGltaXQQ7AQSGgoVbWFqb3JfYWxyZWFkeV9zdGFydGVkEO0EEhkKFHRlYW1fbmFtZV9lZGl0X2xpbWl0EPYEEhIKDXRlYW1fbm90X2pvaW4Q9wQSFgoRdGVhbV9hbHJlYWR5X2pvaW4Q+AQSGAoTdGVhbV9yZXBlYXRfcmVxdWVzdBD5BBIZChR0ZWFtX3RhcmdldF9ub19leGlzdBD6BBIZChR0ZWFtX3RhcmdldF9vcF9saW1pdBD7BBIbChZ0ZWFtX2xvZ291dF9ub3RfZW5vdWdoEPwEEhgKE3RlYW1fcm9sZV9udW1fbGltaXQQ/QQSHQoYdGVhbV9wcmVwYXJlX2RlbmllZF9qb2luEP4EEhcKEnRlYW1faW5mb19yZXF1aXJlZBD/BBIWChF0ZWFtX2NvbmRfbm90X21ldBCABRIVChB0ZWFtX2F1dG9fcmVqZWN0EIEFEhcKEnRlYW1faW52aXRlX3JlcGVhdBCCBRIXChJ0ZWFtX3JlY3J1aXRfbGltaXQQgwUSEQoMdGVhbV9qb2luX2NkEIQFEh4KGXRlYW1faW1wZWFjaF9ub3RpY2VfbGltaXQQhQUSFQoQdGVhbV9yZWFzb25fbnVsbBCGBRILCgZkYl9lcnIQhAcSDQoIZGF0YV9lcnIQhQcSDAoHbmV0X2VychCGBxILCgZjZF9lcnIQhwcSDgoJZGF0YV9udWxsEIgHEhYKEXBlcm1pc3Npb25fZGVuaWVkEIkHEhIKDWlucHV0X2lsbGVnYWwQigc=');
@$core.Deprecated('Use e_reach_stateDescriptor instead')
const e_reach_state$json = const {
  '1': 'e_reach_state',
  '2': const [
    const {'1': 'reach_state_not', '2': 0},
    const {'1': 'reach_state_reach', '2': 1},
    const {'1': 'reach_state_rewarded', '2': 2},
  ],
};

/// Descriptor for `e_reach_state`. Decode as a `google.protobuf.EnumDescriptorProto`.
final $typed_data.Uint8List e_reach_stateDescriptor = $convert.base64Decode('Cg1lX3JlYWNoX3N0YXRlEhMKD3JlYWNoX3N0YXRlX25vdBAAEhUKEXJlYWNoX3N0YXRlX3JlYWNoEAESGAoUcmVhY2hfc3RhdGVfcmV3YXJkZWQQAg==');
@$core.Deprecated('Use e_respond_launchDescriptor instead')
const e_respond_launch$json = const {
  '1': 'e_respond_launch',
  '2': const [
    const {'1': 'client_launch', '2': 0},
    const {'1': 'server_launch', '2': 1},
  ],
};

/// Descriptor for `e_respond_launch`. Decode as a `google.protobuf.EnumDescriptorProto`.
final $typed_data.Uint8List e_respond_launchDescriptor = $convert.base64Decode('ChBlX3Jlc3BvbmRfbGF1bmNoEhEKDWNsaWVudF9sYXVuY2gQABIRCg1zZXJ2ZXJfbGF1bmNoEAE=');
